Создай full-stack web-приложение представляющее собой сайт для обучения студентов JavaScript.
Web приложение должно быть создано без использования backend или frontend фреймворков или библиотек. Только чистый HTML, CSS, JavaScript. Чтобы можно было сделать деплой на простом хостинге. 
Backend должен быть организован в виде JSON файлов с текстами уроков хранящихся на сервере с минимальным Node.JS сервером и Fetch-запросами на изменение файлов.
Сайт должен выглядеть как последовательность уроков разбитых на 4 уровня по сложности (и последовательности изучения) - это первый уровень меню. Каждый уровень должен быть отдельной web-страницей. Внутри уровней  должны быть разделы, внутри разделов уроки. (Для образца сделай в каждом из 4 уровней по 2 раздела и по два урока). Внутри страницы должны быть последовательность разделов с якорными ссылками, а вверху страницы оглавление в виде ссылок, клик на ссылку должен перематывать станицу на место заголовка соответствующего раздела. Промотка должна быть плавная. Внутри каждого раздела с заголовком должно быть несколько заголовков уроков, клик на который вызывает переход на страницу соответствующего урока. 
Каждый урок должен состоять из теоретического материала, тестирования, задач. 
Тесты должны быть простого типа: вопрос, 4 варианта ответа из которых только один правильный. Количество тестовых вопросов админ должен определять сам для каждого урока. (для образца сделай по три тестовых вопроса в каждом уроке).
Прогресс и результаты прохождение тестов сохранять не нужно.
Статистика по пользователям (кто какие уроки прошел) не нужна.
Для задач интерактивный редактор с проверкой кода не нужен. Должно быть только условие задачи.
Должна быть возможность в тексте выделять JavaScript код подсветкой.
В конце каждого урока должны быть кнопки предыдущий/следующий/в оглавление.
Каждый урок должен соответствовать отдельному JSON-файлу находящемуся в отдельном каталоге вместе с относящимися к этому уроку изображениями
Отдельной Главной страницы не нужно. При заходе на сайт пользователь должен сразу попадать на страницу уровней и разделов.

Добавление уроков должно быть похоже на добавление постов в блоге. Для создания и редактирования уроков должен быть текстовый редактор с возможностью выбора шрифта, цвета, и других параметров текста для содержимого уроков. Также нужна  возможность добавления таблиц, списков, ссылок, изображений в текст уроков.  Текстовый редактор должен быть в отдельной странице редактирования урока. Админ-панель должна быть на отдельной странице по адресу: <url сайта>/bod. Вход в админ панель должен быть с формой авторизации со следующими данными:
Логин: bodryakov.web
Пароль: Anna-140275
На форме авторизации должен быть чек-бокс “запомнить меня”.
Админ и редактор уроков должен быть только один, добавление других админов не нужно.
В Админ-панели должно быть предусмотрено редактирование заголовков уровней, разделов, уроков.
В Админ-панели должно быть предусмотрено создание страниц уроков и текстов уроков, тестов, задач с помощью полнофункционального редактора текста. Также должна быть возможность добавлять фото и видео.
После редактирования информации в админ-панели все изменения должны сохранятся в соответствующих JSON-файлах на сервере. JSON-файлы должны быть организованы в каталоги и подкаталоги в соответствии с уровнями и разделами.
Дизайн web-приложения должен быть минималистичный, адаптивный, с переключением светлой и тёмной темы. Цвета предпочтительны серые, голубые, синие.
Должен использоваться самый современный чистый CSS без фрейворков, в том числе для адаптива.
Для уточнения требований и параметров web приложения - задай мне дополнительные вопросы. 
Не начинай создавать приложение пока не получишь от меня ответ на все уточняющие вопросы.
